{"content":"\n# Install\n\n## Quick Install\n\nWe're still working on a one line install. Stay tuned!\n\n## Manual Install\n\nTo run powertool, you'll need [bun](https://github.com/oven-sh/bun). You can install bun with\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\nNow clone the repo somewhere convenient. I'll assume that you have git installed. I'll put it in my `/usr/local/powertool` folder:\n\n```bash\nsudo git clone https://github.com/pwrtool/powertool.git /usr/local/powertool/\n```\n\nYou'll then need to add the bin folder to your path. If you put it in your `/usr/local/powertool` folder, that path would be `/usr/local/powertool/bin`. You'll want something like the following inm your `.bashrc`, `.profile`, `.zshrc` or whatever:\n\n```bash\nexport PATH=$PATH:/usr/local/powertool/bin\n```\n\nNow ensure that the installation worked properly:\n\n```bash\npwrtool --help\n```\n\nThis should display a help message that looks like the following:\n\n```txt\nUsage: pwrtool [options] [command]\n\nAutomate every aspect of your workflow\n\nOptions:\n  -V, --version    output the version number\n  -h, --help       display help for command\n\nCommands:\n  install <kit>    Install a tool from Github to your system\n  update <kit>     uninstalls and reinstalls a kit to ensure it is up to date\n  uninstall <kit>  Uninstall a tool from your system\n  test-install     Installs ./install.sh as a kit to the test-kit directory. You can then run\n                   `ptx bench/test <tool>` to test your kit. This is primarily useful for\n                   developing kits\n  info <kit>       Get information about a kit from its ptinfo.yaml file\n```\n\n# Downloading Kits\n","outline":[{"text":"Install","level":1},{"text":"Quick Install","level":2},{"text":"Manual Install","level":2},{"text":"Downloading Kits","level":1}],"extension":"md","frontmatter":{"title":"Using Powertool"}}